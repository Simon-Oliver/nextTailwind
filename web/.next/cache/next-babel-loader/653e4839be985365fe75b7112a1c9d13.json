{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport Message from \"./Message\";\nexport default function Messages(props) {\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  useEffect(() => {\n    console.log(\"Messages props ------->\", props);\n    setMessages(props.messages);\n  }, []); // useEffect(()=>{\n  //     console.log(\"Messages COMPONENT rerender\", props.messages)\n  // },[])\n\n  const renderMessage = (oldMsg = []) => {\n    const msg = oldMsg.map(e => {\n      if (e.uid === props.uid) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: false\n        });\n      }\n    });\n    var previousNotUserMsg,\n        index = msg.length - 1;\n\n    for (; index >= 0; index--) {\n      if (msg[index].isUser == true) {\n        msg[index] = _objectSpread(_objectSpread({}, msg[index]), {}, {\n          isLast: true\n        });\n        break;\n      }\n    }\n\n    console.log('<<<<<<<<<<< Render Messsage', previousNotUserMsg);\n    return msg.map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        msg: e.msg,\n        showRead: e.showRead,\n        isRead: e.isRead,\n        isUser: e.isUser,\n        mid: e.mid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wd-auto grid grid-cols-12 gap-y-2\",\n      children: renderMessage(messages)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js"],"names":["React","useEffect","useState","Message","Messages","props","messages","setMessages","console","log","renderMessage","oldMsg","msg","map","e","uid","isUser","previousNotUserMsg","index","length","isLast","i","showRead","isRead","mid"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAvC;AACAE,IAAAA,WAAW,CAACF,KAAK,CAACC,QAAP,CAAX;AACH,GAHQ,EAGN,EAHM,CAAT,CAHoC,CAQpC;AACA;AACA;;AAEA,QAAMI,aAAa,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiB;AACnC,UAAMC,GAAG,GAAGD,MAAM,CAACE,GAAP,CAAYC,CAAD,IAAO;AAC1B,UAAIA,CAAC,CAACC,GAAF,KAAUV,KAAK,CAACU,GAApB,EAAyB;AACrB,+CAAYD,CAAZ;AAAeE,UAAAA,MAAM,EAAE;AAAvB;AACH,OAFD,MAEO;AACH,+CAAYF,CAAZ;AAAeE,UAAAA,MAAM,EAAE;AAAvB;AACH;AACJ,KANW,CAAZ;AASA,QAAIC,kBAAJ;AAAA,QACIC,KAAK,GAAGN,GAAG,CAACO,MAAJ,GAAa,CADzB;;AAEA,WAAOD,KAAK,IAAI,CAAhB,EAAmBA,KAAK,EAAxB,EAA4B;AACxB,UAAIN,GAAG,CAACM,KAAD,CAAH,CAAWF,MAAX,IAAqB,IAAzB,EAA+B;AAC3BJ,QAAAA,GAAG,CAACM,KAAD,CAAH,mCAAkBN,GAAG,CAACM,KAAD,CAArB;AAA8BE,UAAAA,MAAM,EAAE;AAAtC;AACA;AACH;AACJ;;AAGDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CQ,kBAA3C;AACA,WAAOL,GAAG,CAACC,GAAJ,CAAQ,CAACC,CAAD,EAAIO,CAAJ,KAAU;AACrB,0BACI,QAAC,OAAD;AACI,QAAA,GAAG,EAAEP,CAAC,CAACF,GADX;AAEI,QAAA,QAAQ,EAAEE,CAAC,CAACQ,QAFhB;AAGI,QAAA,MAAM,EAAER,CAAC,CAACS,MAHd;AAII,QAAA,MAAM,EAAET,CAAC,CAACE,MAJd;AAKI,QAAA,GAAG,EAAEF,CAAC,CAACU;AALX;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVM,CAAP;AAWH,GAhCD;;AAmCA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,mCAAX;AAAA,gBAAgDd,aAAa,CAACJ,QAAD;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport Message from \"./Message\"\n\nexport default function Messages(props) {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        console.log(\"Messages props ------->\", props)\n        setMessages(props.messages)\n    }, [])\n\n    // useEffect(()=>{\n    //     console.log(\"Messages COMPONENT rerender\", props.messages)\n    // },[])\n\n    const renderMessage = (oldMsg = []) => {\n        const msg = oldMsg.map((e) => {\n            if (e.uid === props.uid) {\n                return { ...e, isUser: true };\n            } else {\n                return { ...e, isUser: false };\n            }\n        });\n\n\n        var previousNotUserMsg,\n            index = msg.length - 1;\n        for (; index >= 0; index--) {\n            if (msg[index].isUser == true) {\n                msg[index] = { ...msg[index], isLast: true };\n                break;\n            }\n        }\n\n\n        console.log('<<<<<<<<<<< Render Messsage', previousNotUserMsg);\n        return msg.map((e, i) => {\n            return (\n                <Message\n                    msg={e.msg}\n                    showRead={e.showRead}\n                    isRead={e.isRead}\n                    isUser={e.isUser}\n                    mid={e.mid}\n                />\n            );\n        });\n    };\n\n\n    return (\n        <div>\n            <div class=\"wd-auto grid grid-cols-12 gap-y-2\">{renderMessage(messages)}</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}