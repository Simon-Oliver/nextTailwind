{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js'; // var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\nvar pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n  cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n  encrypted: true\n});\nexport default function socket() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    id: null,\n    people: []\n  }),\n      people = _useState[0],\n      setPeople = _useState[1];\n\n  var endConnection = function endConnection() {\n    pusher.disconnect();\n    axios.post(\"http://localhost:8000/offline/\".concat(_this.state.id));\n  };\n\n  useEffect(function () {\n    console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY); // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n    //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    //     encrypted: true\n    // });\n\n    var channel = pusher.subscribe('websocket-test');\n    axios.get('http://localhost:8000/people').then(function (_ref) {\n      var data = _ref.data;\n      var _data$people = data.people,\n          people = _data$people === void 0 ? [] : _data$people;\n      setPeople({\n        people: people\n      });\n      window.onbeforeunload = endConnection; // Returned function in hook will be only run at end of lifecycle e.g willUnmount\n\n      return function cleanup() {\n        endConnection();\n      };\n    }, []);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pusher test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), people.people.map(function (e) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.position.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.position.lng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(socket, \"mGZNSmTqeVWy4s/EpPBs2IAIR50=\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js"],"names":["React","useEffect","useState","axios","Pusher","pusher","process","env","NEXT_PUBLIC_PUSHER_APP_KEY","cluster","NEXT_PUBLIC_PUSHER_APP_CLUSTER","encrypted","socket","id","people","setPeople","endConnection","disconnect","post","state","console","log","channel","subscribe","get","then","data","window","onbeforeunload","cleanup","map","e","name","position","lat","lng"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAGA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAWE,OAAO,CAACC,GAAR,CAAYC,0BAAvB,EAAmD;AAC5DC,EAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BADuC;AAE5DC,EAAAA,SAAS,EAAE;AAFiD,CAAnD,CAAb;AAKA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAAA,kBACDV,QAAQ,CAAC;AAAEW,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CADP;AAAA,MACtBA,MADsB;AAAA,MACdC,SADc;;AAG7B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBX,IAAAA,MAAM,CAACY,UAAP;AACAd,IAAAA,KAAK,CAACe,IAAN,yCAA4C,KAAI,CAACC,KAAL,CAAWN,EAAvD;AACD,GAHH;;AAKAZ,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAO,CAACC,GAAR,CAAYC,0BAAxB,EADY,CAEZ;AACA;AACA;AACA;;AAEA,QAAIc,OAAO,GAAGjB,MAAM,CAACkB,SAAP,CAAiB,gBAAjB,CAAd;AAGApB,IAAAA,KAAK,CAACqB,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAA+C,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAAA,yBACjCA,IADiC,CACjDZ,MADiD;AAAA,UACjDA,MADiD,6BACxC,EADwC;AAEzDC,MAAAA,SAAS,CAAC;AAAED,QAAAA,MAAM,EAANA;AAAF,OAAD,CAAT;AAEAa,MAAAA,MAAM,CAACC,cAAP,GAAwBZ,aAAxB,CAJyD,CAMzD;;AACA,aAAO,SAASa,OAAT,GAAmB;AACtBb,QAAAA,aAAa;AAChB,OAFD;AAGH,KAVD,EAUG,EAVH;AAYH,GAtBQ,EAsBP,EAtBO,CAAT;AA0BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,MAAM,CAACA,MAAP,CAAcgB,GAAd,CAAkB,UAAAC,CAAC;AAAA,0BAChB;AAAA,gCACA;AAAA,oBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA;AAAA,oBAAMD,CAAC,CAACE,QAAF,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,iBAFA,eAGA;AAAA,oBAAMH,CAAC,CAACE,QAAF,CAAWE;AAAjB;AAAA;AAAA;AAAA;AAAA,iBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,KAAnB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlDuBvB,M","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Pusher from 'pusher-js'\n\n\n// var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\nlet pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n    cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    encrypted: true\n});\n\nexport default function socket() {\n    const [people, setPeople] = useState({ id: null, people: [] });\n\n    const endConnection = () => {\n        pusher.disconnect();\n        axios.post(`http://localhost:8000/offline/${this.state.id}`);\n      }\n\n    useEffect(() => {\n        console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY)\n        // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n        //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n        //     encrypted: true\n        // });\n\n        let channel = pusher.subscribe('websocket-test');\n\n\n        axios.get('http://localhost:8000/people').then(({ data }) => {\n            const { people = [] } = data;\n            setPeople({ people });\n\n            window.onbeforeunload = endConnection;\n\n            // Returned function in hook will be only run at end of lifecycle e.g willUnmount\n            return function cleanup() {\n                endConnection();\n            }\n        }, []);\n\n    },[])\n\n   \n\n    return(\n        <div>\n            <h1>Pusher test</h1>\n            {people.people.map(e=> (\n                <div>\n                <div>{e.name}</div>\n                <div>{e.position.lat}</div>\n                <div>{e.position.lng}</div>\n                </div>\n                \n            ))}\n        </div>\n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}