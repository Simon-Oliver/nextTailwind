{"ast":null,"code":"import _defineProperty from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Message from \"./Message\";\nexport default function Messages(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  useEffect(function () {\n    console.log(\"Added new messages\");\n    setMessages(props.messages);\n    var lastMsg = messages.slice(-1)[0];\n    console.log(\"This is the last msg\", messages, lastMsg);\n\n    if (lastMsg && lastMsg.isSeen === false) {\n      console.log(\"Request, Seen\");\n      axios.post(\"http://localhost:8000/seen/\".concat(props.uid), _objectSpread({}, lastMsg));\n    }\n  });\n\n  var renderMessage = function renderMessage() {\n    var oldMsg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    // Checks if the message was send by the actual user and add property isUser\n    var msg = oldMsg.map(function (e) {\n      if (e.uid === props.uid) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: false\n        });\n      }\n    });\n    return msg.map(function (e, i) {\n      // Have to map the read notfication in messages to make sure it behaves correctly\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          msg: e.msg,\n          isSeen: e.isSeen,\n          isUser: e.isUser,\n          mid: e.mid,\n          isLast: messages.length - 1 == i ? true : false,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: messages.length - 1 == i && e.isUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"absolute text-xs bottom-0 right-0 -mb-5 mr-2 text-gray-500\",\n              children: e.isSeen ? \"Read\" : \"Unread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, _this) : ''\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"wd-auto grid grid-cols-12 gap-y-2\",\n      children: renderMessage(messages)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js"],"names":["React","useEffect","useState","axios","Message","Messages","props","messages","setMessages","console","log","lastMsg","slice","isSeen","post","uid","renderMessage","oldMsg","msg","map","e","isUser","i","mid","length"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AAAA,kBACJJ,QAAQ,CAAC,EAAD,CADJ;AAAA,MAC7BK,QAD6B;AAAA,MACnBC,WADmB;;AAGpCP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,IAAAA,WAAW,CAACF,KAAK,CAACC,QAAP,CAAX;AAEA,QAAMI,OAAO,GAAGJ,QAAQ,CAACK,KAAT,CAAe,CAAC,CAAhB,EAAmB,CAAnB,CAAhB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC,EAA8CI,OAA9C;;AACA,QAAIA,OAAO,IAAIA,OAAO,CAACE,MAAR,KAAmB,KAAlC,EAAyC;AACrCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAP,MAAAA,KAAK,CAACW,IAAN,sCAAyCR,KAAK,CAACS,GAA/C,qBAA2DJ,OAA3D;AACH;AACJ,GAVQ,CAAT;;AAYA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAiB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;AAEnC;AACA,QAAMC,GAAG,GAAGD,MAAM,CAACE,GAAP,CAAW,UAACC,CAAD,EAAO;AAC1B,UAAIA,CAAC,CAACL,GAAF,KAAUT,KAAK,CAACS,GAApB,EAAyB;AACrB,+CAAYK,CAAZ;AAAeC,UAAAA,MAAM,EAAE;AAAvB;AACH,OAFD,MAEO;AACH,+CAAYD,CAAZ;AAAeC,UAAAA,MAAM,EAAE;AAAvB;AACH;AACJ,KANW,CAAZ;AAQA,WAAOH,GAAG,CAACC,GAAJ,CAAQ,UAACC,CAAD,EAAIE,CAAJ,EAAU;AACrB;AACA,0BACI;AAAA,+BACI,QAAC,OAAD;AACI,UAAA,GAAG,EAAEF,CAAC,CAACF,GADX;AAEI,UAAA,MAAM,EAAEE,CAAC,CAACP,MAFd;AAGI,UAAA,MAAM,EAAEO,CAAC,CAACC,MAHd;AAII,UAAA,GAAG,EAAED,CAAC,CAACG,GAJX;AAKI,UAAA,MAAM,EAAEhB,QAAQ,CAACiB,MAAT,GAAkB,CAAlB,IAAuBF,CAAvB,GAA2B,IAA3B,GAAkC,KAL9C;AAAA,iCAMI;AAAA,sBACKf,QAAQ,CAACiB,MAAT,GAAkB,CAAlB,IAAuBF,CAAvB,IAA4BF,CAAC,CAACC,MAA9B,gBACG;AAAK,uBAAM,4DAAX;AAAA,wBAAyED,CAAC,CAACP,MAAF,GAAW,MAAX,GAAoB;AAA7F;AAAA;AAAA;AAAA;AAAA,qBADH,GAGO;AAJZ;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAkBH,KApBM,CAAP;AAqBH,GAhCD;;AAmCA,sBACI;AAAA,2BACI;AAAK,eAAM,mCAAX;AAAA,gBAAgDG,aAAa,CAACT,QAAD;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvDuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nimport Message from \"./Message\"\n\nexport default function Messages(props) {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        console.log(\"Added new messages\")\n        setMessages(props.messages)\n\n        const lastMsg = messages.slice(-1)[0]\n        console.log(\"This is the last msg\", messages, lastMsg)\n        if (lastMsg && lastMsg.isSeen === false) {\n            console.log(\"Request, Seen\")\n            axios.post(`http://localhost:8000/seen/${props.uid}`, { ...lastMsg });\n        }\n    })\n\n    const renderMessage = (oldMsg = []) => {\n\n        // Checks if the message was send by the actual user and add property isUser\n        const msg = oldMsg.map((e) => {\n            if (e.uid === props.uid) {\n                return { ...e, isUser: true };\n            } else {\n                return { ...e, isUser: false };\n            }\n        });\n\n        return msg.map((e, i) => {\n            // Have to map the read notfication in messages to make sure it behaves correctly\n            return (\n                <>\n                    <Message\n                        msg={e.msg}\n                        isSeen={e.isSeen}\n                        isUser={e.isUser}\n                        mid={e.mid}\n                        isLast={messages.length - 1 == i ? true : false}>\n                        <>\n                            {messages.length - 1 == i && e.isUser ? (\n                                <div class=\"absolute text-xs bottom-0 right-0 -mb-5 mr-2 text-gray-500\">{e.isSeen ? \"Read\" : \"Unread\"}</div>\n                            ) : (\n                                    ''\n                                )}\n                        </>\n                    </Message>\n                </>\n            );\n        });\n    };\n\n\n    return (\n        <div>\n            <div class=\"wd-auto grid grid-cols-12 gap-y-2\">{renderMessage(messages)}</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}