{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/chat/[uid].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Test from '../test';\nimport Pusher from 'pusher-js';\nimport e from 'cors';\n\nconst uuid = require('uuid').v4;\n\nimport Messages from \"../../components/Message/Messages\";\n\nconst Chat = props => {\n  const {\n    0: response,\n    1: setResponse\n  } = useState({});\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([{\n    msg: 'Test Message',\n    id: 123\n  }]);\n  const {\n    0: input,\n    1: setInput\n  } = useState({\n    msg: ''\n  });\n  const router = useRouter();\n  const {\n    uid\n  } = router.query;\n  console.log('------------------------+++++++++ Props', props);\n  useEffect(() => {\n    let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n      cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER\n    });\n    setMessages(props.messages);\n    let channel = pusher.subscribe('websocket-test');\n    channel.bind('users', function (data) {\n      console.log('Received users: ', data.users);\n    });\n    channel.bind('message', function (data) {\n      setMessages(data.messages);\n      console.log('Received messages: ', data.messages);\n    });\n    channel.bind('messageSeen', function (data) {\n      console.log('Seen!!!!');\n    });\n    axios.post(`http://localhost:8000/user/${uid}`, {\n      status: 'online'\n    });\n\n    const cleanUp = () => {\n      axios.post(`http://localhost:8000/user/${uid}`, {\n        status: 'offline'\n      });\n      channel.unbind('users');\n      channel.unbind('message');\n      channel.unbind('messageSeen');\n      pusher.unsubscribe('websocket-test');\n      pusher.disconnect();\n    };\n\n    window.onbeforeunload = () => {\n      cleanUp();\n    };\n\n    setResponse(_objectSpread(_objectSpread({}, response), props));\n    return () => {\n      cleanUp();\n    };\n  }, []); //   useEffect(() => {\n  //     console.log('###### seen sent');\n  //     axios.post('http://localhost:8000/seen');\n  //   });\n\n  useEffect(() => {\n    const lastMsg = messages.slice(-1)[0];\n    console.log(\"This is the last msg\", messages, lastMsg);\n    axios.post('http://localhost:8000/seen', {\n      seen: lastMsg\n    });\n  }, [messages]);\n\n  const sendMsg = e => {\n    e.preventDefault();\n    console.log('Sending...');\n    axios.post(`http://localhost:8000/message/${uid}`, {\n      msg: input.msg,\n      mid: uuid()\n    });\n  };\n\n  const onInputChange = e => {\n    e.preventDefault();\n    setInput(_objectSpread(_objectSpread({}, input), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const renderMessage = oldMsg => {\n    const msg = oldMsg.map(e => {\n      if (e.id === uid) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: false\n        });\n      }\n    });\n    var previousNotUserMsg,\n        index = msg.length - 1;\n\n    for (; index >= 0; index--) {\n      if (msg[index].isUser == true) {\n        previousNotUserMsg = index;\n        break;\n      }\n    }\n\n    msg[previousNotUserMsg] = _objectSpread(_objectSpread({}, msg[previousNotUserMsg]), {}, {\n      isLast: true\n    });\n    console.log('<<<<<<<<<<< Render Messsage', msg);\n    return msg.map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        msg: e.msg,\n        showRead: e.showRead,\n        isRead: e.isRead,\n        isUser: e.isUser,\n        mid: e.mid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  console.log(response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => sendMsg(e),\n            onChange: e => onInputChange(e),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"flex w-full border rounded-xl focus:outline-none focus:border-indigo-300 pl-4 h-10\",\n              name: \"msg\",\n              type: \"text\",\n              value: input.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"flex items-center justify-center bg-indigo-500 hover:bg-indigo-600 rounded-xl text-white px-4 py-1 flex-shrink-0\",\n              children: \"Send MSG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\nChat.getInitialProps = async ctx => {\n  const res = await fetch('http://localhost:8000/init');\n  const json = await res.json();\n  return json;\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/chat/[uid].js"],"names":["React","useState","useEffect","useRouter","axios","Test","Pusher","e","uuid","require","v4","Messages","Chat","props","response","setResponse","messages","setMessages","msg","id","input","setInput","router","uid","query","console","log","pusher","process","env","NEXT_PUBLIC_PUSHER_APP_KEY","cluster","NEXT_PUBLIC_PUSHER_APP_CLUSTER","channel","subscribe","bind","data","users","post","status","cleanUp","unbind","unsubscribe","disconnect","window","onbeforeunload","lastMsg","slice","seen","sendMsg","preventDefault","mid","onInputChange","target","name","value","renderMessage","oldMsg","map","isUser","previousNotUserMsg","index","length","isLast","i","showRead","isRead","getInitialProps","ctx","res","fetch","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Test from '../test';\nimport Pusher from 'pusher-js';\nimport e from 'cors';\nconst uuid = require('uuid').v4;\n\nimport Messages from \"../../components/Message/Messages\"\n\nconst Chat = (props) => {\n  const [response, setResponse] = useState({});\n  const [messages, setMessages] = useState([{ msg: 'Test Message', id: 123 }]);\n  const [input, setInput] = useState({ msg: '' });\n  const router = useRouter();\n  const { uid } = router.query;\n\n  console.log('------------------------+++++++++ Props', props);\n\n  useEffect(() => {\n    let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n      cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    });\n\n    setMessages(props.messages);\n\n    let channel = pusher.subscribe('websocket-test');\n\n    channel.bind('users', function (data) {\n      console.log('Received users: ', data.users);\n    });\n\n    channel.bind('message', function (data) {\n      setMessages(data.messages);\n      console.log('Received messages: ', data.messages);\n    });\n\n    channel.bind('messageSeen', function (data) {\n      console.log('Seen!!!!');\n    });\n\n    axios.post(`http://localhost:8000/user/${uid}`, { status: 'online' });\n\n    const cleanUp = () => {\n      axios.post(`http://localhost:8000/user/${uid}`, { status: 'offline' });\n      channel.unbind('users');\n      channel.unbind('message');\n      channel.unbind('messageSeen');\n      pusher.unsubscribe('websocket-test');\n      pusher.disconnect();\n    };\n\n    window.onbeforeunload = () => {\n      cleanUp();\n    };\n\n    setResponse({ ...response, ...props });\n\n    return () => {\n      cleanUp();\n    };\n  }, []);\n\n  //   useEffect(() => {\n  //     console.log('###### seen sent');\n  //     axios.post('http://localhost:8000/seen');\n  //   });\n\n\n  useEffect(() => {\n    const lastMsg = messages.slice(-1)[0]\n    console.log(\"This is the last msg\", messages, lastMsg)\n    axios.post('http://localhost:8000/seen', { seen: lastMsg });\n  }, [messages])\n\n  const sendMsg = (e) => {\n    e.preventDefault();\n    console.log('Sending...');\n    axios.post(`http://localhost:8000/message/${uid}`, { msg: input.msg, mid: uuid() });\n  };\n\n  const onInputChange = (e) => {\n    e.preventDefault();\n    setInput({ ...input, [e.target.name]: e.target.value });\n  };\n\n  const renderMessage = (oldMsg) => {\n    const msg = oldMsg.map((e) => {\n      if (e.id === uid) {\n        return { ...e, isUser: true };\n      } else {\n        return { ...e, isUser: false };\n      }\n    });\n\n    var previousNotUserMsg,\n      index = msg.length - 1;\n    for (; index >= 0; index--) {\n      if (msg[index].isUser == true) {\n        previousNotUserMsg = index;\n        break;\n      }\n    }\n\n    msg[previousNotUserMsg] = { ...msg[previousNotUserMsg], isLast: true };\n    console.log('<<<<<<<<<<< Render Messsage', msg);\n    return msg.map((e, i) => {\n      return (\n        <Message\n          msg={e.msg}\n          showRead={e.showRead}\n          isRead={e.isRead}\n          isUser={e.isUser}\n          mid={e.mid}\n        />\n      );\n    });\n  };\n\n  console.log(response);\n  return (\n    <div className=\"flex items-center justify-center\">\n      <Messages\n      messages={messages}\n      ></Messages>\n      <div className=\"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\">\n        <div className=\"relative w-full\">\n          <div className=\"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\">\n            <form onSubmit={(e) => sendMsg(e)} onChange={(e) => onInputChange(e)}>\n              <input className=\"flex w-full border rounded-xl focus:outline-none focus:border-indigo-300 pl-4 h-10\" name=\"msg\" type=\"text\" value={input.msg}></input>\n              <button class=\"flex items-center justify-center bg-indigo-500 hover:bg-indigo-600 rounded-xl text-white px-4 py-1 flex-shrink-0\">Send MSG</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nChat.getInitialProps = async (ctx) => {\n  const res = await fetch('http://localhost:8000/init');\n  const json = await res.json();\n  return json;\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}