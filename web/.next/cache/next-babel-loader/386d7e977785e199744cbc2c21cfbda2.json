{"ast":null,"code":"import _regeneratorRuntime from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/chat/[uid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Test from '../test';\nimport Pusher from 'pusher-js';\nimport e from 'cors';\n\nvar uuid = require('uuid').v4;\n\nimport Messages from \"../../components/Message/Messages\";\n\nvar Chat = function Chat(props) {\n  _s();\n\n  var _useState = useState({}),\n      response = _useState[0],\n      setResponse = _useState[1];\n\n  var _useState2 = useState([{\n    msg: 'Test Message',\n    uid: 123,\n    mid: 834,\n    isRead: false\n  }]),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState({\n    msg: ''\n  }),\n      input = _useState3[0],\n      setInput = _useState3[1];\n\n  var router = useRouter();\n  var uid = router.query.uid;\n  console.log('------------------------+++++++++ Props', props);\n  useEffect(function () {\n    var pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n      cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER\n    });\n    setMessages(props.messages);\n    var channel = pusher.subscribe('websocket-test');\n    channel.bind('users', function (data) {\n      console.log('Received users: ', data.users);\n    });\n    channel.bind('message', function (data) {\n      setMessages(data.messages);\n      console.log('Received messages: ', data.messages);\n    });\n    channel.bind('messageSeen', function (data) {\n      console.log('Seen!!!!');\n    });\n    axios.post(\"http://localhost:8000/user/\".concat(uid), {\n      status: 'online'\n    });\n\n    var cleanUp = function cleanUp() {\n      axios.post(\"http://localhost:8000/user/\".concat(uid), {\n        status: 'offline'\n      });\n      channel.unbind('users');\n      channel.unbind('message');\n      channel.unbind('messageSeen');\n      pusher.unsubscribe('websocket-test');\n      pusher.disconnect();\n    };\n\n    window.onbeforeunload = function () {\n      cleanUp();\n    };\n\n    setResponse(_objectSpread(_objectSpread({}, response), props));\n    return function () {\n      cleanUp();\n    };\n  }, []); //   useEffect(() => {\n  //     console.log('###### seen sent');\n  //     axios.post('http://localhost:8000/seen');\n  //   });\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var lastMsg, call;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lastMsg = messages.slice(-1)[0];\n            console.log(\"This is the last msg\", messages, lastMsg);\n            _context.next = 4;\n            return axios.post('http://localhost:8000/seen', {\n              seen: lastMsg\n            });\n\n          case 4:\n            call = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [messages]);\n\n  var sendMsg = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var call;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              console.log('Sending...');\n              _context2.next = 4;\n              return axios.post(\"http://localhost:8000/message/\".concat(uid), {\n                msg: input.msg,\n                mid: uuid()\n              });\n\n            case 4:\n              call = _context2.sent;\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendMsg(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onInputChange = function onInputChange(e) {\n    e.preventDefault();\n    setInput(_objectSpread(_objectSpread({}, input), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var renderMessage = function renderMessage(oldMsg) {\n    var msg = oldMsg.map(function (e) {\n      if (e.id === uid) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: false\n        });\n      }\n    });\n    var previousNotUserMsg,\n        index = msg.length - 1;\n\n    for (; index >= 0; index--) {\n      if (msg[index].isUser == true) {\n        previousNotUserMsg = index;\n        break;\n      }\n    }\n\n    msg[previousNotUserMsg] = _objectSpread(_objectSpread({}, msg[previousNotUserMsg]), {}, {\n      isLast: true\n    });\n    console.log('<<<<<<<<<<< Render Messsage', msg);\n    return msg.map(function (e, i) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        msg: e.msg,\n        showRead: e.showRead,\n        isRead: e.isRead,\n        isUser: e.isUser,\n        mid: e.mid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  console.log(response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      messages: messages,\n      uid: uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: function onSubmit(e) {\n              return sendMsg(e);\n            },\n            onChange: function onChange(e) {\n              return onInputChange(e);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"flex w-full border rounded-xl focus:outline-none focus:border-indigo-300 pl-4 h-10\",\n              name: \"msg\",\n              type: \"text\",\n              value: input.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"class\": \"flex items-center justify-center bg-indigo-500 hover:bg-indigo-600 rounded-xl text-white px-4 py-1 flex-shrink-0\",\n              children: \"Send MSG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Chat, \"6oxlzvsxCKy9zXkKwY0tEUeUvh0=\", false, function () {\n  return [useRouter];\n});\n\n_c = Chat;\n\nChat.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var res, json;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch('http://localhost:8000/init');\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return res.json();\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/chat/[uid].js"],"names":["React","useState","useEffect","useRouter","axios","Test","Pusher","e","uuid","require","v4","Messages","Chat","props","response","setResponse","msg","uid","mid","isRead","messages","setMessages","input","setInput","router","query","console","log","pusher","process","env","NEXT_PUBLIC_PUSHER_APP_KEY","cluster","NEXT_PUBLIC_PUSHER_APP_CLUSTER","channel","subscribe","bind","data","users","post","status","cleanUp","unbind","unsubscribe","disconnect","window","onbeforeunload","lastMsg","slice","seen","call","sendMsg","preventDefault","onInputChange","target","name","value","renderMessage","oldMsg","map","id","isUser","previousNotUserMsg","index","length","isLast","i","showRead","getInitialProps","ctx","fetch","res","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Test from '../test';\nimport Pusher from 'pusher-js';\nimport e from 'cors';\nconst uuid = require('uuid').v4;\n\nimport Messages from \"../../components/Message/Messages\"\n\nconst Chat = (props) => {\n  const [response, setResponse] = useState({});\n  const [messages, setMessages] = useState([{ msg: 'Test Message', uid: 123, mid: 834, isRead: false }]);\n  const [input, setInput] = useState({ msg: '' });\n  const router = useRouter();\n  const { uid } = router.query;\n\n  console.log('------------------------+++++++++ Props', props);\n\n  useEffect(() => {\n    let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n      cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    });\n\n    setMessages(props.messages);\n\n    let channel = pusher.subscribe('websocket-test');\n\n    channel.bind('users', function (data) {\n      console.log('Received users: ', data.users);\n    });\n\n    channel.bind('message', function (data) {\n      setMessages(data.messages);\n      console.log('Received messages: ', data.messages);\n    });\n\n    channel.bind('messageSeen', function (data) {\n      console.log('Seen!!!!');\n    });\n\n    axios.post(`http://localhost:8000/user/${uid}`, { status: 'online' });\n\n    const cleanUp = () => {\n      axios.post(`http://localhost:8000/user/${uid}`, { status: 'offline' });\n      channel.unbind('users');\n      channel.unbind('message');\n      channel.unbind('messageSeen');\n      pusher.unsubscribe('websocket-test');\n      pusher.disconnect();\n    };\n\n    window.onbeforeunload = () => {\n      cleanUp();\n    };\n\n    setResponse({ ...response, ...props });\n\n    return () => {\n      cleanUp();\n    };\n  }, []);\n\n  //   useEffect(() => {\n  //     console.log('###### seen sent');\n  //     axios.post('http://localhost:8000/seen');\n  //   });\n\n\n  useEffect(async () => {\n    const lastMsg = messages.slice(-1)[0]\n    console.log(\"This is the last msg\", messages, lastMsg)\n    const call = await axios.post('http://localhost:8000/seen', { seen: lastMsg });\n  }, [messages])\n\n  const sendMsg = async (e) => {\n    e.preventDefault();\n    console.log('Sending...');\n   const call = await axios.post(`http://localhost:8000/message/${uid}`, { msg: input.msg, mid: uuid() });\n  };\n\n  const onInputChange = (e) => {\n    e.preventDefault();\n    setInput({ ...input, [e.target.name]: e.target.value });\n  };\n\n  const renderMessage = (oldMsg) => {\n    const msg = oldMsg.map((e) => {\n      if (e.id === uid) {\n        return { ...e, isUser: true };\n      } else {\n        return { ...e, isUser: false };\n      }\n    });\n\n    var previousNotUserMsg,\n      index = msg.length - 1;\n    for (; index >= 0; index--) {\n      if (msg[index].isUser == true) {\n        previousNotUserMsg = index;\n        break;\n      }\n    }\n\n    msg[previousNotUserMsg] = { ...msg[previousNotUserMsg], isLast: true };\n    console.log('<<<<<<<<<<< Render Messsage', msg);\n    return msg.map((e, i) => {\n      return (\n        <Message\n          msg={e.msg}\n          showRead={e.showRead}\n          isRead={e.isRead}\n          isUser={e.isUser}\n          mid={e.mid}\n        />\n      );\n    });\n  };\n\n  console.log(response);\n  return (\n    <div className=\"flex items-center justify-center\">\n      <Messages\n        messages={messages}\n        uid={uid}\n      ></Messages>\n      <div className=\"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\">\n        <div className=\"relative w-full\">\n          <div className=\"flex flex-row items-center h-16 rounded-xl bg-white w-full px-4\">\n            <form onSubmit={(e) => sendMsg(e)} onChange={(e) => onInputChange(e)}>\n              <input className=\"flex w-full border rounded-xl focus:outline-none focus:border-indigo-300 pl-4 h-10\" name=\"msg\" type=\"text\" value={input.msg}></input>\n              <button class=\"flex items-center justify-center bg-indigo-500 hover:bg-indigo-600 rounded-xl text-white px-4 py-1 flex-shrink-0\">Send MSG</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nChat.getInitialProps = async (ctx) => {\n  const res = await fetch('http://localhost:8000/init');\n  const json = await res.json();\n  return json;\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}