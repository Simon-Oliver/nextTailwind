{"ast":null,"code":"import _defineProperty from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js'; // var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\nvar pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n  cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER\n});\nexport default function socket() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    id: null,\n    people: []\n  }),\n      people = _useState[0],\n      setPeople = _useState[1];\n\n  var _useState2 = useState({\n    msg: \"\"\n  }),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var endConnection = function endConnection() {\n    pusher.disconnect();\n    axios.post(\"http://localhost:8000/offline/\".concat(people.id));\n  };\n\n  var sendMsg = function sendMsg(e) {\n    e.preventDefault();\n    console.log(\"Sending...\");\n    axios.post(\"http://localhost:8000/message/123\", {\n      msg: input.msg\n    });\n  };\n\n  var onInputChange = function onInputChange(e) {\n    e.preventDefault();\n    setInput(_objectSpread(_objectSpread({}, input), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  useEffect(function () {\n    console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY); // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n    //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    //     encrypted: true\n    // });\n\n    var channel = pusher.subscribe('websocket-test');\n    channel.bind('message', function (data) {\n      console.log('Received message: ' + data.msg);\n    });\n    axios.get('http://localhost:8000/people').then(function (_ref) {\n      var data = _ref.data;\n      var _data$people = data.people,\n          people = _data$people === void 0 ? [] : _data$people;\n      setPeople({\n        people: people\n      });\n      window.onbeforeunload = endConnection;\n    }, []);\n    return function cleanup() {\n      endConnection();\n      cleanInterval(positionUpdate);\n    };\n  }, []);\n  console.log(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pusher test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), people.people.map(function (e) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.isOnline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: function onSubmit(e) {\n        return sendMsg(e);\n      },\n      onChange: function onChange(e) {\n        return onInputChange(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"msg\",\n        type: \"text\",\n        value: input.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send MSG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(socket, \"/fo/jESujqBpVfREooK0YAyYsYY=\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js"],"names":["React","useEffect","useState","axios","Pusher","pusher","process","env","NEXT_PUBLIC_PUSHER_APP_KEY","cluster","NEXT_PUBLIC_PUSHER_APP_CLUSTER","socket","id","people","setPeople","msg","input","setInput","endConnection","disconnect","post","sendMsg","e","preventDefault","console","log","onInputChange","target","name","value","channel","subscribe","bind","data","get","then","window","onbeforeunload","cleanup","cleanInterval","positionUpdate","map","isOnline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Pusher from 'pusher-js'\n\n\n// var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\nlet pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n    cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n});\n\nexport default function socket() {\n    const [people, setPeople] = useState({ id: null, people: [] });\n    const [input, setInput] = useState({ msg: \"\" })\n\n    const endConnection = () => {\n        pusher.disconnect();\n        axios.post(`http://localhost:8000/offline/${people.id}`);\n    }\n\n\n    const sendMsg = (e) => {\n        e.preventDefault()\n        console.log(\"Sending...\")\n        axios.post(`http://localhost:8000/message/123`, { msg: input.msg });\n    }\n\n    const onInputChange = (e) => {\n        e.preventDefault()\n        setInput({ ...input, [e.target.name]: e.target.value })\n    }\n\n    useEffect(() => {\n        console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY)\n        // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n        //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n        //     encrypted: true\n        // });\n\n        let channel = pusher.subscribe('websocket-test');\n\n        channel.bind('message', function (data) {\n\n            console.log('Received message: ' + data.msg);\n\n        });\n\n\n        axios.get('http://localhost:8000/people').then(({ data }) => {\n            const { people = [] } = data;\n            setPeople({ people });\n\n            window.onbeforeunload = endConnection;\n        }, []);\n\n\n        return function cleanup() {\n            endConnection();\n            cleanInterval(positionUpdate)\n        }\n    }, [])\n\n\n    console.log(people)\n    return (\n        <div>\n            <h1>Pusher test</h1>\n            {people.people.map(e => (\n                <div>\n                    <div>{e.name}</div>\n                    <div>{e.isOnline}</div>\n                </div>\n\n            ))}\n            <form onSubmit={(e) => sendMsg(e)} onChange={(e) => onInputChange(e)}>\n                <input name=\"msg\" type=\"text\" value={input.msg}></input>\n                <button>Send MSG</button>\n            </form>\n        </div>\n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}