{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/cv.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './css.module.css';\nimport Head from \"next/head\";\n\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nexport default function Test(props) {\n  const {\n    0: cv,\n    1: setCv\n  } = useState({});\n  const {\n    0: formFields,\n    1: setFormFields\n  } = useState([{\n    id: \"jobTitle\",\n    type: \"text\"\n  }, {\n    id: \"jobTitle\",\n    type: \"text\"\n  }, {\n    id: \"jobTitle\",\n    type: \"text\"\n  }, {\n    id: \"jobTitle\",\n    type: \"text\"\n  }, {\n    id: \"jobTitle\",\n    type: \"text\"\n  }, {\n    id: \"jobTitle\",\n    type: \"text\"\n  }]);\n  const {\n    0: pageIsMounted,\n    1: setPageIsMounted\n  } = useState(false);\n\n  const getFormOptions = e => {\n    e.preventDefault();\n    setCv(_objectSpread(_objectSpread({}, cv), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const addField = () => {\n    setFormFields([...formFields, {\n      id: \"startDates\",\n      type: \"date\"\n    }]);\n  };\n\n  const renderInputfields = fields => {\n    return fields.map((e, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: e.type,\n          id: `${e.id}${index}`,\n          name: `${e.id}${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX;\n  useEffect(() => {\n    setPageIsMounted(true);\n    const map = new mapboxgl.Map({\n      container: \"my-map\",\n      style: \"mapbox://styles/mapbox/streets-v11\"\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onChange: e => getFormOptions(e),\n      children: renderInputfields(formFields)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addField,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my-map\",\n      style: {\n        height: 500,\n        width: 500\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/cv.js"],"names":["React","useEffect","useState","styles","Head","mapboxgl","require","Test","props","cv","setCv","formFields","setFormFields","id","type","pageIsMounted","setPageIsMounted","getFormOptions","e","preventDefault","target","value","addField","renderInputfields","fields","map","index","accessToken","process","env","NEXT_PUBLIC_MAPBOX","Map","container","style","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './css.module.css';\nimport Head from \"next/head\"\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nexport default function Test(props) {\nconst [cv, setCv] = useState({})\nconst [formFields, setFormFields] = useState([\n    {id:\"jobTitle\", type:\"text\"},\n    {id:\"jobTitle\", type:\"text\"},\n    {id:\"jobTitle\", type:\"text\"},\n    {id:\"jobTitle\", type:\"text\"},\n    {id:\"jobTitle\", type:\"text\"},\n    {id:\"jobTitle\", type:\"text\"},\n])\nconst [pageIsMounted, setPageIsMounted] = useState(false)\n\n\nconst getFormOptions = (e) =>{\n    e.preventDefault()\n    setCv({...cv, [e.target.id]:e.target.value})\n    \n}\n\nconst addField = () => {\n    setFormFields([...formFields,{id:\"startDates\", type:\"date\"}])\n    \n}\n\n\nconst renderInputfields = (fields) =>{\nreturn fields.map((e,index)=>{\n    return (\n        <>\n        <input type={e.type} id={`${e.id}${index}`} name={`${e.id}${index}`}></input>\n        </>\n    )\n})\n}\n\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX;\n\nuseEffect(() => {\n    setPageIsMounted(true)\n      const map = new mapboxgl.Map({\n        container: \"my-map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n      });\n}, [])\n\n  return (\n    <div className={styles.container}>\n        <Head>\n        <link\n          href=\"https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css\"\n          rel=\"stylesheet\"\n        />\n        </Head>\n      <form onChange={(e)=> getFormOptions(e)}>\n          {renderInputfields(formFields)}\n      </form>\n      <button onClick={addField}>Add</button>\n      <div id=\"my-map\" style={{ height: 500, width: 500 }} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}