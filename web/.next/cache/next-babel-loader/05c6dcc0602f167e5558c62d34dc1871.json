{"ast":null,"code":"import _defineProperty from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Message from \"./Message\";\nexport default function Messages(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  useEffect(function () {\n    console.log(\"Added new messages\");\n    setMessages(function (prevState) {\n      return _toConsumableArray(props.messages);\n    });\n  });\n  useEffect(function () {\n    var lastMsg = messages.slice(-1)[0];\n    console.log(\"This is the last msg\", messages, lastMsg);\n\n    if (lastMsg > 0 && !lastMsg.isSeen) {\n      axios.post(\"http://localhost:8000/seen/\".concat(props.uid), _objectSpread({}, lastMsg));\n    }\n  }, [messages]);\n\n  var renderMessage = function renderMessage() {\n    var oldMsg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var msg = oldMsg.map(function (e) {\n      if (e.uid === props.uid) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          isUser: false\n        });\n      }\n    });\n    return msg.map(function (e, i) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        msg: e.msg,\n        isSeen: e.isSeen,\n        isUser: e.isUser,\n        mid: e.mid,\n        isLast: messages.length - 1 == i ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"wd-auto grid grid-cols-12 gap-y-2\",\n      children: renderMessage(messages)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"BxyhfWWpnSbijcu7qFgrB+X/mWM=\");\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/components/Message/Messages.js"],"names":["React","useEffect","useState","axios","Message","Messages","props","messages","setMessages","console","log","prevState","lastMsg","slice","isSeen","post","uid","renderMessage","oldMsg","msg","map","e","isUser","i","mid","length"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AAAA,kBACJJ,QAAQ,CAAC,EAAD,CADJ;AAAA,MAC7BK,QAD6B;AAAA,MACnBC,WADmB;;AAGpCP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,IAAAA,WAAW,CAAC,UAACG,SAAD;AAAA,gCAAmBL,KAAK,CAACC,QAAzB;AAAA,KAAD,CAAX;AACH,GAHQ,CAAT;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMW,OAAO,GAAGL,QAAQ,CAACM,KAAT,CAAe,CAAC,CAAhB,EAAmB,CAAnB,CAAhB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC,EAA8CK,OAA9C;;AACA,QAAGA,OAAO,GAAG,CAAV,IAAe,CAACA,OAAO,CAACE,MAA3B,EAAkC;AAC9BX,MAAAA,KAAK,CAACY,IAAN,sCAAyCT,KAAK,CAACU,GAA/C,qBAA2DJ,OAA3D;AACH;AACJ,GANQ,EAMN,CAACL,QAAD,CANM,CAAT;;AAQA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAiB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;AACnC,QAAMC,GAAG,GAAGD,MAAM,CAACE,GAAP,CAAW,UAACC,CAAD,EAAO;AAC1B,UAAIA,CAAC,CAACL,GAAF,KAAUV,KAAK,CAACU,GAApB,EAAyB;AACrB,+CAAYK,CAAZ;AAAeC,UAAAA,MAAM,EAAE;AAAvB;AACH,OAFD,MAEO;AACH,+CAAYD,CAAZ;AAAeC,UAAAA,MAAM,EAAE;AAAvB;AACH;AACJ,KANW,CAAZ;AAQA,WAAOH,GAAG,CAACC,GAAJ,CAAQ,UAACC,CAAD,EAAIE,CAAJ,EAAU;AACrB,0BACI,QAAC,OAAD;AACI,QAAA,GAAG,EAAEF,CAAC,CAACF,GADX;AAEI,QAAA,MAAM,EAAEE,CAAC,CAACP,MAFd;AAGI,QAAA,MAAM,EAAEO,CAAC,CAACC,MAHd;AAII,QAAA,GAAG,EAAED,CAAC,CAACG,GAJX;AAKI,QAAA,MAAM,EAAEjB,QAAQ,CAACkB,MAAT,GAAgB,CAAhB,IAAqBF,CAArB,GAAyB,IAAzB,GAA+B;AAL3C;AAAA;AAAA;AAAA;AAAA,eADJ;AASH,KAVM,CAAP;AAWH,GApBD;;AAuBA,sBACI;AAAA,2BACI;AAAK,eAAM,mCAAX;AAAA,gBAAgDN,aAAa,CAACV,QAAD;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA5CuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nimport Message from \"./Message\"\n\nexport default function Messages(props) {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        console.log(\"Added new messages\")\n        setMessages((prevState) => [...props.messages])\n    })\n\n    useEffect(() => {\n        const lastMsg = messages.slice(-1)[0]\n        console.log(\"This is the last msg\", messages, lastMsg)\n        if(lastMsg > 0 && !lastMsg.isSeen){\n            axios.post(`http://localhost:8000/seen/${props.uid}`, { ...lastMsg });\n        }\n    }, [messages])\n\n    const renderMessage = (oldMsg = []) => {\n        const msg = oldMsg.map((e) => {\n            if (e.uid === props.uid) {\n                return { ...e, isUser: true };\n            } else {\n                return { ...e, isUser: false };\n            }\n        });\n\n        return msg.map((e, i) => {\n            return (\n                <Message\n                    msg={e.msg}\n                    isSeen={e.isSeen}\n                    isUser={e.isUser}\n                    mid={e.mid}\n                    isLast={messages.length-1 == i ? true: false}\n                />\n            );\n        });\n    };\n\n\n    return (\n        <div>\n            <div class=\"wd-auto grid grid-cols-12 gap-y-2\">{renderMessage(messages)}</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}