{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './css.module.css';\nimport Head from \"next/head\";\n\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nexport default function Test(props) {\n  const {\n    0: cv,\n    1: setCv\n  } = useState({});\n  const {\n    0: formFields,\n    1: setFormFields\n  } = useState([{\n    id: 'jobTitle',\n    type: 'text'\n  }, {\n    id: 'jobTitle',\n    type: 'text'\n  }, {\n    id: 'jobTitle',\n    type: 'text'\n  }, {\n    id: 'jobTitle',\n    type: 'text'\n  }, {\n    id: 'jobTitle',\n    type: 'text'\n  }, {\n    id: 'jobTitle',\n    type: 'text'\n  }]);\n\n  const getFormOptions = e => {\n    e.preventDefault();\n    setCv(_objectSpread(_objectSpread({}, cv), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const addField = () => {\n    setFormFields([...formFields, {\n      id: 'startDates',\n      type: 'date'\n    }]);\n  };\n\n  const renderInputfields = fields => {\n    return fields.map((e, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-md shadow-sm -space-y-px\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\",\n          type: e.type,\n          id: `${e.id}${index}`,\n          name: `${e.id}${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    console.log(cv);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.container} mt-8 space-y-6`,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: e => getFormOptions(e),\n        children: renderInputfields(formFields)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addField,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/map.js"],"names":["React","useEffect","useState","styles","Head","mapboxgl","require","Test","props","cv","setCv","formFields","setFormFields","id","type","getFormOptions","e","preventDefault","target","value","addField","renderInputfields","fields","map","index","console","log","container"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAxB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcR,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACS,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,CAC3C;AAAEW,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAD2C,EAE3C;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAF2C,EAG3C;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAH2C,EAI3C;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAJ2C,EAK3C;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAL2C,EAM3C;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAN2C,CAAD,CAA5C;;AASA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,KAAK,iCAAMD,EAAN;AAAU,OAACO,CAAC,CAACE,MAAF,CAASL,EAAV,GAAeG,CAAC,CAACE,MAAF,CAASC;AAAlC,OAAL;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB;AAAEE,MAAAA,EAAE,EAAE,YAAN;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAhB,CAAD,CAAb;AACD,GAFD;;AAIA,QAAMO,iBAAiB,GAAIC,MAAD,IAAY;AACpC,WAAOA,MAAM,CAACC,GAAP,CAAW,CAACP,CAAD,EAAIQ,KAAJ,KAAc;AAC9B,0BACE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,4NADZ;AAEE,UAAA,IAAI,EAAER,CAAC,CAACF,IAFV;AAGE,UAAA,EAAE,EAAG,GAAEE,CAAC,CAACH,EAAG,GAAEW,KAAM,EAHtB;AAIE,UAAA,IAAI,EAAG,GAAER,CAAC,CAACH,EAAG,GAAEW,KAAM;AAJxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXM,CAAP;AAYD,GAbD;;AAeAvB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,EAAZ;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qFAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,GAAEN,MAAM,CAACwB,SAAU,iBAApC;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAGX,CAAD,IAAOD,cAAc,CAACC,CAAD,CAArC;AAAA,kBAA2CK,iBAAiB,CAACV,UAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAES,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './css.module.css';\nimport Head from \"next/head\"\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nexport default function Test(props) {\n  const [cv, setCv] = useState({});\n  const [formFields, setFormFields] = useState([\n    { id: 'jobTitle', type: 'text' },\n    { id: 'jobTitle', type: 'text' },\n    { id: 'jobTitle', type: 'text' },\n    { id: 'jobTitle', type: 'text' },\n    { id: 'jobTitle', type: 'text' },\n    { id: 'jobTitle', type: 'text' },\n  ]);\n\n  const getFormOptions = (e) => {\n    e.preventDefault();\n    setCv({ ...cv, [e.target.id]: e.target.value });\n  };\n\n  const addField = () => {\n    setFormFields([...formFields, { id: 'startDates', type: 'date' }]);\n  };\n\n  const renderInputfields = (fields) => {\n    return fields.map((e, index) => {\n      return (\n        <div className=\"rounded-md shadow-sm -space-y-px\">\n          <input\n            className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            type={e.type}\n            id={`${e.id}${index}`}\n            name={`${e.id}${index}`}\n          ></input>\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    console.log(cv);\n  });\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className={`${styles.container} mt-8 space-y-6`}>\n        <form onChange={(e) => getFormOptions(e)}>{renderInputfields(formFields)}</form>\n        <button onClick={addField}>Add</button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}