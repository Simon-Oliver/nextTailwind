{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport client from '../client.js';\nimport BlockContent from '@sanity/block-content-to-react';\nimport groq from 'groq';\nimport styles from './css.module.css';\nimport Link from \"next/link\";\nimport moment from \"moment\";\nimport imageUrlBuilder from '@sanity/image-url'; // Get a pre-configured url-builder from your sanity client\n\nconst builder = imageUrlBuilder(client);\n\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nconst Post = props => {\n  const {\n    0: imgUrl,\n    1: setImgUrl\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState('Food');\n  const router = useRouter();\n  useEffect(() => {\n    console.log(props);\n    console.log(category);\n  }, []);\n  useEffect(() => {\n    const imgBuilder = imageUrlBuilder({\n      projectId: \"6btzanu1\",\n      dataset: 'production'\n    });\n    setImgUrl(imgBuilder.image(props.mainImage).width(2000).height(800));\n  }, [props.mainImage]);\n  useEffect(() => {\n    console.log(category);\n  }, [category]);\n\n  const onBtnClick = e => {\n    e.preventDefault();\n    setCategory(e.target.innerHTML);\n  };\n\n  const overrides = {\n    date: props => /*#__PURE__*/_jsxDEV(\"p\", _objectSpread({\n      className: styles.date\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this),\n    h2: props => /*#__PURE__*/_jsxDEV(\"h2\", _objectSpread({\n      className: styles.subheading1\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this),\n    h3: props => /*#__PURE__*/_jsxDEV(\"h3\", _objectSpread({\n      className: styles.subheading2\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this),\n    img: props => /*#__PURE__*/_jsxDEV(\"img\", _objectSpread({\n      className: styles.imgPosts\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)\n  };\n  const serializers = {\n    listItem: props => props.node.listItem == \"number\" ? /*#__PURE__*/_jsxDEV(\"li\", _objectSpread({\n      className: styles.number\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 62\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", _objectSpread({\n      className: styles.bullet\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 108\n    }, this),\n    types: {\n      block: props => // Check if we have an override for the “style”\n      overrides[props.node.style] // if so, call the function and pass in the children, ignoring\n      // the other unnecessary props\n      ? overrides[props.node.style]({\n        children: props.children\n      }) // otherwise, fallback to the provided default with all props\n      : BlockContent.defaultSerializers.types.block(props)\n    }\n  };\n\n  const renderPosts = posts => {\n    const imgBuilder = imageUrlBuilder({\n      projectId: \"6btzanu1\",\n      dataset: 'production'\n    });\n    let filtered = Object.keys(posts).map(k => {\n      return posts[k];\n    }).filter(e => e.categories.includes(category));\n    console.log(\"filtered array\", filtered);\n    return filtered.map(e => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: `/post/${e[\"slug\"].current}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postCard,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.imgPosts,\n              src: imgBuilder.image(e[\"mainImage\"]).width(300).height(300)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: styles.postBody,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.postTitle,\n                children: e[\"title\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.postDate,\n                children: moment(e.publishedAt).format(\"MMMM DD, yyyy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navBar,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: category == \"Food\" ? `${styles.tagBtn} ${styles.tagActive}` : `${styles.tagBtn}`,\n        onClick: e => onBtnClick(e),\n        children: \"Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: category == \"Design\" ? `${styles.tagBtn} ${styles.tagActive}` : `${styles.tagBtn}`,\n        onClick: e => onBtnClick(e),\n        children: \"Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.blogContainer,\n      children: renderPosts(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\nconst query = groq`*[_type == \"post\"]{body, mainImage,slug,title,publishedAt,\"categories\": categories[]->title}`; //`*[_type == \"post\"]`\n\nPost.getInitialProps = async ctx => {\n  const {\n    slug = \"\"\n  } = ctx.query;\n  return await client.fetch(query);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/posts.js"],"names":["React","useEffect","useState","useRouter","client","BlockContent","groq","styles","Link","moment","imageUrlBuilder","builder","urlFor","source","image","Post","props","imgUrl","setImgUrl","category","setCategory","router","console","log","imgBuilder","projectId","dataset","mainImage","width","height","onBtnClick","e","preventDefault","target","innerHTML","overrides","date","h2","subheading1","h3","subheading2","img","imgPosts","serializers","listItem","node","number","bullet","types","block","style","children","defaultSerializers","renderPosts","posts","filtered","Object","keys","map","k","filter","categories","includes","current","postCard","postBody","postTitle","postDate","publishedAt","format","navBar","tagBtn","tagActive","blogContainer","query","getInitialProps","ctx","slug","fetch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router';\nimport client from '../client.js'\nimport BlockContent from '@sanity/block-content-to-react'\nimport groq from 'groq'\nimport styles from './css.module.css';\nimport Link from \"next/link\"\nimport moment from \"moment\"\n\n\nimport imageUrlBuilder from '@sanity/image-url'\n\n// Get a pre-configured url-builder from your sanity client\nconst builder = imageUrlBuilder(client)\n\nfunction urlFor(source) {\n    return builder.image(source)\n}\n\n\nconst Post = (props) => {\n    const [imgUrl, setImgUrl] = useState(\"\")\n    const [category, setCategory] = useState('Food')\n\n    const router = useRouter()\n    useEffect(() => {\n        console.log(props)\n        console.log(category)\n    }, [])\n\n    useEffect(() => {\n        const imgBuilder = imageUrlBuilder({\n            projectId: \"6btzanu1\",\n            dataset: 'production',\n        })\n        setImgUrl(imgBuilder.image(props.mainImage).width(2000).height(800))\n\n    }, [props.mainImage])\n\n    useEffect(() => {\n        console.log(category)\n    }, [category])\n\n    const onBtnClick = (e) => {\n        e.preventDefault()\n        setCategory(e.target.innerHTML)\n    }\n\n    const overrides = {\n        date: props => <p className={styles.date} {...props} />,\n        h2: props => <h2 className={styles.subheading1} {...props} />,\n        h3: props => <h3 className={styles.subheading2} {...props} />,\n        img: props => <img className={styles.imgPosts} {...props} />,\n    }\n\n    const serializers = {\n        listItem: props => props.node.listItem == \"number\" ? <li className={styles.number} {...props} /> : <li className={styles.bullet} {...props} />,\n\n        types: {\n            block: props =>\n                // Check if we have an override for the “style”\n                overrides[props.node.style]\n                    // if so, call the function and pass in the children, ignoring\n                    // the other unnecessary props\n                    ? overrides[props.node.style]({ children: props.children })\n\n                    // otherwise, fallback to the provided default with all props\n                    : BlockContent.defaultSerializers.types.block(props),\n        }\n    }\n\n\n    const renderPosts = (posts) => {\n        const imgBuilder = imageUrlBuilder({\n            projectId: \"6btzanu1\",\n            dataset: 'production',\n        })\n        let filtered = Object.keys(posts).map(k => {\n            return posts[k]\n        }).filter(e => e.categories.includes(category))\n\n        console.log(\"filtered array\", filtered)\n\n        return filtered.map((e) => {\n            return (\n                <Link href={`/post/${e[\"slug\"].current}`}><a>\n                    <div className={styles.postCard}>\n                        <img className={styles.imgPosts} src={imgBuilder.image(e[\"mainImage\"]).width(300).height(300)} />\n                        <div class={styles.postBody}>\n                            <p className={styles.postTitle}>{e[\"title\"]}</p>\n                            <p className={styles.postDate}>{moment(e.publishedAt).format(\"MMMM DD, yyyy\")}</p>\n                        </div>\n                    </div>\n                </a></Link>\n            )\n        })\n    }\n\n\n    return (\n        <div>\n            <nav className={styles.navBar}>\n                <button className={category == \"Food\" ? `${styles.tagBtn} ${styles.tagActive}` : `${styles.tagBtn}`} onClick={e => onBtnClick(e)} >Food</button>\n                <button className={category == \"Design\" ? `${styles.tagBtn} ${styles.tagActive}` : `${styles.tagBtn}`} onClick={e => onBtnClick(e)}>Design</button>\n            </nav>\n            <div className={styles.blogContainer}>\n\n                {renderPosts(props)}\n            </div>\n        </div>\n    )\n}\n\nconst query = groq`*[_type == \"post\"]{body, mainImage,slug,title,publishedAt,\"categories\": categories[]->title}`\n\n\n//`*[_type == \"post\"]`\n\nPost.getInitialProps = async (ctx) => {\n    const { slug = \"\" } = ctx.query\n    return await client.fetch(query)\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}