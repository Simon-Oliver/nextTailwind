{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import React, { useState } from 'react'\n// import dynamic from 'next/dynamic'\n// const QrReader = dynamic(() => import('react-qr-reader'), {\n//     ssr: false\n// })\n// export default function qr() {\n//     const [result, setResult] = useState([])\n//     const handleScan = data => {\n//         if (data) {\n//             setResult([...result, {\n//                 result: data\n//             }])\n//         }\n//     }\n//     const handleError = err => {\n//         console.error(err)\n//     }\n//     const renderResult = () => {\n//         return result.map(e => (<div>{e.result}</div>))\n//     }\n//     return (\n//         <div>\n//             <QrReader\n//                 delay={300}\n//                 onError={handleError}\n//                 onScan={handleScan}\n//                 style={{ width: '100%' }}\n//             />\n//             <p>{renderResult}</p>\n//         </div>\n//     )\n// }\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nvar QrReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-qr-reader')];\n    },\n    modules: ['react-qr-reader']\n  }\n});\n_c2 = QrReader;\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      result: \"No result\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScan\", function (data) {\n      if (data) {\n        _this.setState({\n          result: data\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (err) {\n      console.error(err);\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 300,\n          onError: this.handleError,\n          onScan: this.handleScan,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QrReader$dynamic\");\n$RefreshReg$(_c2, \"QrReader\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js"],"names":["React","Component","dynamic","QrReader","ssr","Index","result","data","setState","err","console","error","handleError","handleScan","width","state"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAMC,QAAQ,GAAGD,OAAO,MAAC;AAAA,SAAM,OAAO,iBAAP,CAAN;AAAA,CAAD,EAAkC;AACtDE,EAAAA,GAAG,EAAE,KADiD;AAAA;AAAA;AAAA,kCAApB,iBAAoB;AAAA;AAAA,cAApB,iBAAoB;AAAA;AAAA,CAAlC,CAAxB;MAAMD,Q;;IAIAE,K;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;iEAIK,UAACC,IAAD,EAAU;AACnB,UAAIA,IAAJ,EAAU;AACN,cAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAEC;AADE,SAAd;AAGH;AACJ,K;;kEACa,UAACE,GAAD,EAAS;AACnBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,K;;;;;;;6BACQ;AACL,0BACI;AAAA,gCACI,QAAC,QAAD;AACI,UAAA,KAAK,EAAE,GADX;AAEI,UAAA,OAAO,EAAE,KAAKG,WAFlB;AAGI,UAAA,MAAM,EAAE,KAAKC,UAHjB;AAII,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,oBAAI,KAAKC,KAAL,CAAWT;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH;;;;EA3BeL,S;;AA8BpB,eAAeI,KAAf","sourcesContent":["// import React, { useState } from 'react'\n\n// import dynamic from 'next/dynamic'\n// const QrReader = dynamic(() => import('react-qr-reader'), {\n//     ssr: false\n// })\n\n// export default function qr() {\n//     const [result, setResult] = useState([])\n\n\n//     const handleScan = data => {\n//         if (data) {\n//             setResult([...result, {\n//                 result: data\n//             }])\n//         }\n//     }\n//     const handleError = err => {\n//         console.error(err)\n//     }\n\n//     const renderResult = () => {\n//         return result.map(e => (<div>{e.result}</div>))\n//     }\n\n\n//     return (\n//         <div>\n//             <QrReader\n//                 delay={300}\n//                 onError={handleError}\n//                 onScan={handleScan}\n//                 style={{ width: '100%' }}\n//             />\n//             <p>{renderResult}</p>\n//         </div>\n//     )\n// }\n\nimport React, { Component } from 'react'\nimport dynamic from 'next/dynamic'\n\nconst QrReader = dynamic(() => import('react-qr-reader'), {\n    ssr: false\n})\n\nclass Index extends Component {\n    state = {\n        result: \"No result\",\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            this.setState({\n                result: data,\n            });\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n    render() {\n        return (\n            <div>\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                />\n                <p>{this.state.result}</p>\n            </div>\n        );\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}