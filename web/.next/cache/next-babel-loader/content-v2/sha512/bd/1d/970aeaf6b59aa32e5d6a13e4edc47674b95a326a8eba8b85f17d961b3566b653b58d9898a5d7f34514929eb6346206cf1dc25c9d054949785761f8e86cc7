{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { useState } from 'react'\n// import dynamic from 'next/dynamic'\n// const QrReader = dynamic(() => import('react-qr-reader'), {\n//     ssr: false\n// })\n// export default function qr() {\n//     const [result, setResult] = useState([])\n//     const handleScan = data => {\n//         if (data) {\n//             setResult([...result, {\n//                 result: data\n//             }])\n//         }\n//     }\n//     const handleError = err => {\n//         console.error(err)\n//     }\n//     const renderResult = () => {\n//         return result.map(e => (<div>{e.result}</div>))\n//     }\n//     return (\n//         <div>\n//             <QrReader\n//                 delay={300}\n//                 onError={handleError}\n//                 onScan={handleScan}\n//                 style={{ width: '100%' }}\n//             />\n//             <p>{renderResult}</p>\n//         </div>\n//     )\n// }\nimport React, { Component } from 'react';\nconst isBrowser = false;\n\nif (isBrowser) {\n  var QrReader = require('react-qr-reader');\n}\n\nclass QRReader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      result: 'No result'\n    });\n\n    _defineProperty(this, \"handleScan\", data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    return isBrowser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QRReader;","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js"],"names":["React","Component","isBrowser","QrReader","require","QRReader","result","data","setState","err","console","error","render","handleError","handleScan","width","state"],"mappings":";;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,SAAS,QAAf;;AAEA,IAAIA,SAAJ,EAAe;AACX,MAAIC,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAtB;AACH;;AAGD,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACrB;AACJK,MAAAA,MAAM,EAAE;AADJ,KADqB;;AAAA,wCAKhBC,IAAI,IAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,aAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAEC;AADE,SAAd;AAGH;AACJ,KAX4B;;AAAA,yCAYfE,GAAG,IAAI;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAd4B;AAAA;;AAe7BG,EAAAA,MAAM,GAAG;AACL,WAAOV,SAAS,iBACZ;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,OAAO,EAAE,KAAKW,WAFlB;AAGI,QAAA,MAAM,EAAE,KAAKC,UAHjB;AAII,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBAAI,KAAKC,KAAL,CAAWV;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA3B4B;;AA8BjC,eAAeD,QAAf","sourcesContent":["// import React, { useState } from 'react'\n\n// import dynamic from 'next/dynamic'\n// const QrReader = dynamic(() => import('react-qr-reader'), {\n//     ssr: false\n// })\n\n// export default function qr() {\n//     const [result, setResult] = useState([])\n\n\n//     const handleScan = data => {\n//         if (data) {\n//             setResult([...result, {\n//                 result: data\n//             }])\n//         }\n//     }\n//     const handleError = err => {\n//         console.error(err)\n//     }\n\n//     const renderResult = () => {\n//         return result.map(e => (<div>{e.result}</div>))\n//     }\n\n\n//     return (\n//         <div>\n//             <QrReader\n//                 delay={300}\n//                 onError={handleError}\n//                 onScan={handleScan}\n//                 style={{ width: '100%' }}\n//             />\n//             <p>{renderResult}</p>\n//         </div>\n//     )\n// }\n\nimport React, { Component } from 'react'\nconst isBrowser = typeof window != 'undefined';\n\nif (isBrowser) {\n    var QrReader = require('react-qr-reader');\n}\n\n\nclass QRReader extends Component {\n    state = {\n        result: 'No result'\n    }\n\n    handleScan = data => {\n        if (data) {\n            this.setState({\n                result: data\n            })\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n    render() {\n        return isBrowser && (\n            <div>\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '100%' }}\n                />\n                <p>{this.state.result}</p>\n            </div>\n        )\n    }\n}\n\nexport default QRReader;"]},"metadata":{},"sourceType":"module"}