{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TestContext } from '../components/Context/';\nimport { ThemeContext } from '../components/Context/';\nimport Test from \"./test\";\nvar ThemeProvider = ThemeContext.Provider;\nvar TestProvider = TestContext.Provider;\nexport default function testcontext() {\n  _s();\n\n  var _useState = useState([{\n    uid: 123,\n    name: \"Urs\",\n    status: \"online\"\n  }, {\n    uid: 345,\n    name: \"Tom\",\n    status: \"offline\"\n  }, {\n    uid: 908,\n    name: \"James\",\n    status: \"online\"\n  }]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var theme = {\n    background: \"green\",\n    color: \"red\"\n  };\n  useEffect(function () {\n    console.log(\"Test Context ------\", data);\n  }, [data]);\n\n  var clickHandler = function clickHandler() {\n    var uid = Number(data[data.length - 1].uid + 1);\n    var name = \"Name \".concat(uid);\n    var status = \"online\";\n    setData([].concat(_toConsumableArray(data), [{\n      uid: uid,\n      name: name,\n      length: length\n    }]));\n  };\n\n  var toggleDarkMode = function toggleDarkMode() {\n    setDarkMode(!darkMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      value: theme,\n      children: /*#__PURE__*/_jsxDEV(TestProvider, {\n        value: data,\n        children: [/*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickHandler,\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickHandler,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(testcontext, \"549l0cojnTTMO0juwB6NVpSgL34=\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js"],"names":["React","useState","useEffect","TestContext","ThemeContext","Test","ThemeProvider","Provider","TestProvider","testcontext","uid","name","status","data","setData","darkMode","setDarkMode","theme","background","color","console","log","clickHandler","Number","length","toggleDarkMode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,aAAa,GAAGF,YAAY,CAACG,QAAnC;AACA,IAAMC,YAAY,GAAGL,WAAW,CAACI,QAAjC;AAEA,eAAe,SAASE,WAAT,GAAuB;AAAA;;AAAA,kBACVR,QAAQ,CAAC,CAC7B;AAAES,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,KAAlB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAD6B,EAE7B;AAAEF,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,KAAlB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAF6B,EAG7B;AAAEF,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,OAAlB;AAA2BC,IAAAA,MAAM,EAAE;AAAnC,GAH6B,CAAD,CADE;AAAA,MAC3BC,IAD2B;AAAA,MACrBC,OADqB;;AAAA,mBAMFb,QAAQ,CAAC,KAAD,CANN;AAAA,MAM3Bc,QAN2B;AAAA,MAMjBC,WANiB;;AAQlC,MAAMC,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAE,OADF;AAEVC,IAAAA,KAAK,EAAE;AAFG,GAAd;AAKAjB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,IAAnC;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,MAAMS,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMZ,GAAG,GAAGa,MAAM,CAACV,IAAI,CAACA,IAAI,CAACW,MAAL,GAAc,CAAf,CAAJ,CAAsBd,GAAtB,GAA4B,CAA7B,CAAlB;AACA,QAAMC,IAAI,kBAAWD,GAAX,CAAV;AACA,QAAME,MAAM,GAAG,QAAf;AAEAE,IAAAA,OAAO,8BAAKD,IAAL,IAAW;AAAEH,MAAAA,GAAG,EAAHA,GAAF;AAAOC,MAAAA,IAAI,EAAJA,IAAP;AAAaa,MAAAA,MAAM,EAANA;AAAb,KAAX,GAAP;AACH,GAND;;AAQA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBT,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAKA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEE,KAAtB;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEJ,IAArB;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAES,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1CuBb,W","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TestContext } from '../components/Context/'\nimport { ThemeContext } from '../components/Context/'\nimport Test from \"./test\"\n\nconst ThemeProvider = ThemeContext.Provider\nconst TestProvider = TestContext.Provider\n\nexport default function testcontext() {\n    const [data, setData] = useState([\n        { uid: 123, name: \"Urs\", status: \"online\" },\n        { uid: 345, name: \"Tom\", status: \"offline\" },\n        { uid: 908, name: \"James\", status: \"online\" }\n    ])\n    const [darkMode, setDarkMode] = useState(false)\n\n    const theme = {\n        background: \"green\",\n        color: \"red\"\n    }\n\n    useEffect(() => {\n        console.log(\"Test Context ------\", data)\n    }, [data])\n\n    const clickHandler = () => {\n        const uid = Number(data[data.length - 1].uid + 1)\n        const name = `Name ${uid}`\n        const status = \"online\"\n\n        setData([...data, { uid, name, length }])\n    }\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode)\n    }\n\n\n    return (\n        <div>\n            <ThemeProvider value={theme}>\n                <TestProvider value={data}>\n                    <Test ></Test>\n                    <button onClick={clickHandler}>Button</button>\n                    <button onClick={clickHandler}>Toggle</button>\n                </TestProvider>\n            </ThemeProvider>\n\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}