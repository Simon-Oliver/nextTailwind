{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nvar QrReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false\n});\n_c2 = QrReader;\nexport default function qr() {\n  _s();\n\n  var _useState = useState([]),\n      result = _useState[0],\n      setResult = _useState[1];\n\n  var handleScan = function handleScan(data) {\n    if (data) {\n      setResult([].concat(_toConsumableArray(result), [{\n        result: data\n      }]));\n    }\n  };\n\n  var handleError = function handleError(err) {\n    console.error(err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(qr, \"cW0+QCQMA4zTol5H7z5XfVXOO40=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QrReader$dynamic\");\n$RefreshReg$(_c2, \"QrReader\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/qr.js"],"names":["React","useState","QrReader","dynamic","ssr","qr","result","setResult","handleScan","data","handleError","err","console","error","width","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,IAAMC,QAAQ,GAAGC,OAAO,MAAC;AAAA,SAAM,OAAO,iBAAP,CAAN;AAAA,CAAD,EAAkC;AACtDC,EAAAA,GAAG,EAAE;AADiD,CAAlC,CAAxB;MAAMF,Q;AAIN,eAAe,SAASG,EAAT,GAAc;AAAA;;AAAA,kBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA,MAClBK,MADkB;AAAA,MACVC,SADU;;AAIzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACvB,QAAIA,IAAJ,EAAU;AACNF,MAAAA,SAAS,8BAAKD,MAAL,IAAa;AAClBA,QAAAA,MAAM,EAAEG;AADU,OAAb,GAAT;AAGH;AACJ,GAND;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AACvBC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,GAFD;;AAMA,sBACI;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAED,WAFb;AAGI,MAAA,MAAM,EAAEF,UAHZ;AAII,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,gBAAI,KAAKC,KAAL,CAAWT;AAAf;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA5BuBD,E","sourcesContent":["import React, { useState } from 'react'\nconst QrReader = dynamic(() => import('react-qr-reader'), {\n    ssr: false\n})\n\nexport default function qr() {\n    const [result, setResult] = useState([])\n\n\n    const handleScan = data => {\n        if (data) {\n            setResult([...result, {\n                result: data\n            }])\n        }\n    }\n    const handleError = err => {\n        console.error(err)\n    }\n\n\n\n    return (\n        <div>\n            <QrReader\n                delay={300}\n                onError={handleError}\n                onScan={handleScan}\n                style={{ width: '100%' }}\n            />\n            <p>{this.state.result}</p>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}