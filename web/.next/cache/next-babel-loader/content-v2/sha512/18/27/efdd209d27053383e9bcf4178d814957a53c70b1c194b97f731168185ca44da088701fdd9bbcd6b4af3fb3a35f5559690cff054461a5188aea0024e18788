{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/inventory.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TestContext } from '../components/Context/';\nimport { ThemeContext } from '../components/Context/';\nimport Test from \"./test\";\nconst ThemeProvider = ThemeContext.Provider;\nconst TestProvider = TestContext.Provider;\nexport default function testcontext() {\n  const {\n    0: data,\n    1: setData\n  } = useState([{\n    id: 1,\n    boxName: \"Box q\",\n    content: [{\n      itemId: 1,\n      itemName: \"Item 1\",\n      weight: 500,\n      value: 50\n    }]\n  }]);\n  const contextValue = {\n    data,\n    setData\n  };\n  const {\n    0: darkMode,\n    1: setDarkMode\n  } = useState(false);\n  useEffect(() => {\n    console.log(\"Test Context ------\", data);\n  }, [data]);\n\n  const clickHandler = () => {\n    const uid = Number(data[data.length - 1].uid + 1);\n    const name = `Name ${uid}`;\n    const status = \"online\";\n    setData([...data, data[0]]);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TestProvider, {\n      value: contextValue,\n      children: [/*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/inventory.js"],"names":["React","useState","useEffect","TestContext","ThemeContext","Test","ThemeProvider","Provider","TestProvider","testcontext","data","setData","id","boxName","content","itemId","itemName","weight","value","contextValue","darkMode","setDarkMode","console","log","clickHandler","uid","Number","length","name","status","toggleDarkMode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,aAAa,GAAGF,YAAY,CAACG,QAAnC;AACA,MAAMC,YAAY,GAAGL,WAAW,CAACI,QAAjC;AAEA,eAAe,SAASE,WAAT,GAAuB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,CAC7B;AAAEW,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,OAAlB;AAA2BC,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,QAAQ,EAAE,QAAvB;AAAiCC,MAAAA,MAAM,EAAE,GAAzC;AAA8CC,MAAAA,KAAK,EAAE;AAArD,KAAD;AAApC,GAD6B,CAAD,CAAhC;AAIA,QAAMC,YAAY,GAAG;AAAET,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAArB;AAEA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCb,IAAnC;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMc,YAAY,GAAG,MAAM;AACvB,UAAMC,GAAG,GAAGC,MAAM,CAAChB,IAAI,CAACA,IAAI,CAACiB,MAAL,GAAc,CAAf,CAAJ,CAAsBF,GAAtB,GAA4B,CAA7B,CAAlB;AACA,UAAMG,IAAI,GAAI,QAAOH,GAAI,EAAzB;AACA,UAAMI,MAAM,GAAG,QAAf;AAEAlB,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,CAAP;AACH,GAND;;AAQA,QAAMoB,cAAc,GAAG,MAAM;AACzBT,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAKA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAED,YAArB;AAAA,8BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TestContext } from '../components/Context/'\nimport { ThemeContext } from '../components/Context/'\nimport Test from \"./test\"\n\nconst ThemeProvider = ThemeContext.Provider\nconst TestProvider = TestContext.Provider\n\nexport default function testcontext() {\n    const [data, setData] = useState([\n        { id: 1, boxName: \"Box q\", content: [{ itemId: 1, itemName: \"Item 1\", weight: 500, value: 50 }] }\n    ])\n\n    const contextValue = { data, setData }\n\n    const [darkMode, setDarkMode] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Test Context ------\", data)\n    }, [data])\n\n    const clickHandler = () => {\n        const uid = Number(data[data.length - 1].uid + 1)\n        const name = `Name ${uid}`\n        const status = \"online\"\n\n        setData([...data, data[0]])\n    }\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode)\n    }\n\n\n    return (\n        <div>\n            <TestProvider value={contextValue}>\n                <Test ></Test>\n                <button onClick={clickHandler}>Button</button>\n            </TestProvider>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}