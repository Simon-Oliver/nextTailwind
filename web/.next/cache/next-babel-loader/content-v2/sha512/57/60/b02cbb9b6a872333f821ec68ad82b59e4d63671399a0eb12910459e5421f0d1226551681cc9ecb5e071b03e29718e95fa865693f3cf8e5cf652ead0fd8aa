{"ast":null,"code":"const jsonData = require(\"./inventoryData.json\");\n\nconst fs = require(\"fs\");\n\nexport default (async (req, res) => {\n  //const { count } = JSON.parse(req.body);\n  console.log(req.body, req.method);\n\n  try {\n    if (req.method == \"GET\") {\n      const data = {\n        res: `Server response inventory`,\n        jsonData\n      };\n      console.log(\"--------->\", data);\n      res.json(data);\n    } else if (req.method == \"POST\") {\n      console.log(\"-------> POST request\"); //const data = { res: `Server response inventory ${jsonData}` }\n\n      const newData = [...jsonData, {\n        name: \"test\"\n      }];\n      fs.writeFile(\"./inventoryData.json\", JSON.stringify(newData), err => {\n        if (err) {\n          console.log(err);\n        }\n\n        console.log(newData);\n      });\n      res.json(newData);\n    }\n  } catch (e) {\n    console.log(\"Whoooooop Server error\");\n    res.status(e.status).json(e);\n  }\n});","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/api/inventory.js"],"names":["jsonData","require","fs","req","res","console","log","body","method","data","json","newData","name","writeFile","JSON","stringify","err","e","status"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB,EAAsBJ,GAAG,CAACK,MAA1B;;AACA,MAAI;AACA,QAAIL,GAAG,CAACK,MAAJ,IAAc,KAAlB,EAAyB;AACrB,YAAMC,IAAI,GAAG;AAAEL,QAAAA,GAAG,EAAG,2BAAR;AAAoCJ,QAAAA;AAApC,OAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,IAA1B;AACAL,MAAAA,GAAG,CAACM,IAAJ,CAASD,IAAT;AACH,KAJD,MAIO,IAAIN,GAAG,CAACK,MAAJ,IAAc,MAAlB,EAA0B;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAD6B,CAE7B;;AACA,YAAMK,OAAO,GAAG,CAAC,GAAGX,QAAJ,EAAc;AAAEY,QAAAA,IAAI,EAAE;AAAR,OAAd,CAAhB;AAGAV,MAAAA,EAAE,CAACW,SAAH,CAAa,sBAAb,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAArC,EAA+DK,GAAD,IAAS;AACnE,YAAIA,GAAJ,EAAS;AACLX,UAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACH;;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACH,OALD;AAMAP,MAAAA,GAAG,CAACM,IAAJ,CAASC,OAAT;AACH;AAEJ,GApBD,CAoBE,OAAOM,CAAP,EAAU;AACRZ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAF,IAAAA,GAAG,CAACc,MAAJ,CAAWD,CAAC,CAACC,MAAb,EAAqBR,IAArB,CAA0BO,CAA1B;AACH;AACJ,CA3BD","sourcesContent":["const jsonData = require(\"./inventoryData.json\")\nconst fs = require(\"fs\")\n\nexport default async (req, res) => {\n    //const { count } = JSON.parse(req.body);\n    console.log(req.body, req.method)\n    try {\n        if (req.method == \"GET\") {\n            const data = { res: `Server response inventory`, jsonData }\n            console.log(\"--------->\", data)\n            res.json(data);\n        } else if (req.method == \"POST\") {\n            console.log(\"-------> POST request\")\n            //const data = { res: `Server response inventory ${jsonData}` }\n            const newData = [...jsonData, { name: \"test\" }]\n\n\n            fs.writeFile(\"./inventoryData.json\", JSON.stringify(newData), (err) => {\n                if (err) {\n                    console.log(err)\n                }\n                console.log(newData)\n            })\n            res.json(newData);\n        }\n\n    } catch (e) {\n        console.log(\"Whoooooop Server error\")\n        res.status(e.status).json(e);\n    }\n}"]},"metadata":{},"sourceType":"module"}