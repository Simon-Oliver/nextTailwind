{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TestContext from '../components/Context/';\nimport Test from \"./test\";\nvar TestProvider = TestContext.Provider;\nexport default function testcontext() {\n  _s();\n\n  var _useState = useState([{\n    id: 1,\n    name: 'thing 1',\n    length: 5\n  }, {\n    id: 2,\n    name: 'thing 2',\n    length: 2\n  }, {\n    id: 3,\n    name: 'thing 3',\n    length: 6\n  }, {\n    id: 4,\n    name: 'thing 4',\n    length: 10\n  }, {\n    id: 5,\n    name: 'thing 5',\n    length: 1\n  }]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var clickHandler = function clickHandler(data) {\n    var id = data[data.length - 1] + 1;\n    var name = \"thing \".concat(id);\n    var length = Math.random() * 11;\n    setData({\n      id: id,\n      name: name,\n      length: length\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TestProvider, {\n      value: data,\n      children: [/*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(testcontext, \"FwScVNvWx33GFzl3+7rU2n4JWHs=\");","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js"],"names":["React","useState","TestContext","Test","TestProvider","Provider","testcontext","id","name","length","data","setData","clickHandler","Math","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACVL,QAAQ,CAAC,CAC7B;AAAEM,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAD6B,EAE7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAF6B,EAG7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAH6B,EAI7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAJ6B,EAK7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAL6B,CAAD,CADE;AAAA,MAC3BC,IAD2B;AAAA,MACrBC,OADqB;;AASlC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AAC3B,QAAMH,EAAE,GAAGG,IAAI,CAACA,IAAI,CAACD,MAAL,GAAc,CAAf,CAAJ,GAAwB,CAAnC;AACA,QAAMD,IAAI,mBAAYD,EAAZ,CAAV;AACA,QAAME,MAAM,GAAGI,IAAI,CAACC,MAAL,KAAgB,EAA/B;AAEAH,IAAAA,OAAO,CAAC;AAAEJ,MAAAA,EAAE,EAAFA,EAAF;AAAMC,MAAAA,IAAI,EAAJA,IAAN;AAAYC,MAAAA,MAAM,EAANA;AAAZ,KAAD,CAAP;AACH,GAND;;AASA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEC,IAArB;AAAA,8BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA1BuBN,W","sourcesContent":["import React, { useState } from 'react'\nimport TestContext from '../components/Context/'\nimport Test from \"./test\"\n\nconst TestProvider = TestContext.Provider\n\nexport default function testcontext() {\n    const [data, setData] = useState([\n        { id: 1, name: 'thing 1', length: 5 },\n        { id: 2, name: 'thing 2', length: 2 },\n        { id: 3, name: 'thing 3', length: 6 },\n        { id: 4, name: 'thing 4', length: 10 },\n        { id: 5, name: 'thing 5', length: 1 }\n    ])\n\n    const clickHandler = (data) => {\n        const id = data[data.length - 1] + 1\n        const name = `thing ${id}`\n        const length = Math.random() * 11\n\n        setData({ id, name, length })\n    }\n\n\n    return (\n        <div>\n            <TestProvider value={data}>\n                <Test ></Test>\n                <button onClick={clickHandler}>Button</button>\n            </TestProvider>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}