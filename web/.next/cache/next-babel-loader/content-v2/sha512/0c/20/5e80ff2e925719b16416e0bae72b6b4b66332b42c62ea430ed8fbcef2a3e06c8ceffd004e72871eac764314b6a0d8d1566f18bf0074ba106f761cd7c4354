{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js\";\nimport React, { useState, useEffect } from 'react';\nimport TestContext from '../components/Context/';\nimport Test from \"./test\";\nconst TestProvider = TestContext.Provider;\nexport default function testcontext() {\n  const {\n    0: data,\n    1: setData\n  } = useState([{\n    id: 1,\n    name: 'thing 1',\n    length: 5\n  }, {\n    id: 2,\n    name: 'thing 2',\n    length: 2\n  }, {\n    id: 3,\n    name: 'thing 3',\n    length: 6\n  }, {\n    id: 4,\n    name: 'thing 4',\n    length: 10\n  }, {\n    id: 5,\n    name: 'thing 5',\n    length: 1\n  }]);\n  useEffect(() => {\n    console.log(\"Test Context ------\", data);\n  }, [data]);\n\n  const clickHandler = data => {\n    const id = Number(data[data.length - 1] + 1);\n    const name = `thing ${id}`;\n    const length = Math.random() * 11;\n    setData([...data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TestProvider, {\n      value: data,\n      children: [/*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/web/pages/testcontext.js"],"names":["React","useState","useEffect","TestContext","Test","TestProvider","Provider","testcontext","data","setData","id","name","length","console","log","clickHandler","Number","Math","random"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,CAC7B;AAAES,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAD6B,EAE7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAF6B,EAG7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAH6B,EAI7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAJ6B,EAK7B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAL6B,CAAD,CAAhC;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,IAAnC;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMO,YAAY,GAAIP,IAAD,IAAU;AAC3B,UAAME,EAAE,GAAGM,MAAM,CAACR,IAAI,CAACA,IAAI,CAACI,MAAL,GAAc,CAAf,CAAJ,GAAwB,CAAzB,CAAjB;AACA,UAAMD,IAAI,GAAI,SAAQD,EAAG,EAAzB;AACA,UAAME,MAAM,GAAGK,IAAI,CAACC,MAAL,KAAgB,EAA/B;AAEAT,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACH,GAND;;AASA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,IAArB;AAAA,8BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TestContext from '../components/Context/'\nimport Test from \"./test\"\n\nconst TestProvider = TestContext.Provider\n\nexport default function testcontext() {\n    const [data, setData] = useState([\n        { id: 1, name: 'thing 1', length: 5 },\n        { id: 2, name: 'thing 2', length: 2 },\n        { id: 3, name: 'thing 3', length: 6 },\n        { id: 4, name: 'thing 4', length: 10 },\n        { id: 5, name: 'thing 5', length: 1 }\n    ])\n\n    useEffect(() => {\n        console.log(\"Test Context ------\", data)\n    }, [data])\n\n    const clickHandler = (data) => {\n        const id = Number(data[data.length - 1] + 1)\n        const name = `thing ${id}`\n        const length = Math.random() * 11\n\n        setData([...data])\n    }\n\n\n    return (\n        <div>\n            <TestProvider value={data}>\n                <Test ></Test>\n                <button onClick={clickHandler}>Button</button>\n            </TestProvider>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}