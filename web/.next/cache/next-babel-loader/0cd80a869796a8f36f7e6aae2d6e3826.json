{"ast":null,"code":"// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nvar QRCode = require('qrcode');\n\nexport default (async (req, res) => {\n  res.statusCode = 200;\n  const {\n    email,\n    password\n  } = JSON.parse(req.body);\n\n  try {\n    const qrData = await checkAuth(email, password);\n    console.log(\"--------->\", qrData);\n    res.json(qrData);\n  } catch (e) {\n    res.status(e.status).json(e);\n  }\n});\n\nconst checkAuth = async (email, pw) => {\n  let resObj = {\n    auth: false,\n    status: 0,\n    message: \"\"\n  };\n\n  if (email == \"test@test.com\" && pw == \"123\") {\n    resObj.auth = true;\n    resObj.status = 200;\n    resObj.code = QRCode.toDataURL('I am a pony!');\n    return resObj;\n  } else {\n    resObj.message = \"Username or password incorrect\";\n    resObj.status = 401;\n    throw resObj;\n  }\n};","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Coding/nextjs-test/pages/api/hello.js"],"names":["QRCode","require","req","res","statusCode","email","password","JSON","parse","body","qrData","checkAuth","console","log","json","e","status","pw","resObj","auth","message","code","toDataURL"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjCA,EAAAA,GAAG,CAACC,UAAJ,GAAiB,GAAjB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,IAAf,CAA1B;;AACF,MAAG;AACD,UAAMC,MAAM,GAAG,MAAMC,SAAS,CAACN,KAAD,EAAQC,QAAR,CAA9B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,MAAzB;AACAP,IAAAA,GAAG,CAACW,IAAJ,CAASJ,MAAT;AAED,GALD,CAKE,OAAMK,CAAN,EAAQ;AACRZ,IAAAA,GAAG,CAACa,MAAJ,CAAWD,CAAC,CAACC,MAAb,EAAqBF,IAArB,CAA0BC,CAA1B;AACD;AAGA,CAbD;;AAgBA,MAAMJ,SAAS,GAAG,OAAON,KAAP,EAAcY,EAAd,KAAqB;AACrC,MAAIC,MAAM,GAAG;AACXC,IAAAA,IAAI,EAAE,KADK;AAEXH,IAAAA,MAAM,EAAE,CAFG;AAGXI,IAAAA,OAAO,EAAE;AAHE,GAAb;;AAKA,MAAGf,KAAK,IAAI,eAAT,IAA4BY,EAAE,IAAI,KAArC,EAA2C;AACzCC,IAAAA,MAAM,CAACC,IAAP,GAAc,IAAd;AACAD,IAAAA,MAAM,CAACF,MAAP,GAAgB,GAAhB;AACAE,IAAAA,MAAM,CAACG,IAAP,GAAcrB,MAAM,CAACsB,SAAP,CAAiB,cAAjB,CAAd;AACA,WAAOJ,MAAP;AAED,GAND,MAMM;AACJA,IAAAA,MAAM,CAACE,OAAP,GAAiB,gCAAjB;AACAF,IAAAA,MAAM,CAACF,MAAP,GAAgB,GAAhB;AACA,UAAME,MAAN;AACD;AACF,CAjBD","sourcesContent":["// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nvar QRCode = require('qrcode')\n\nexport default async (req, res) => {\n  res.statusCode = 200\n  const {email, password} = JSON.parse(req.body);\ntry{\n  const qrData = await checkAuth(email, password)\n  console.log(\"--------->\",qrData)\n  res.json(qrData);\n  \n} catch(e){\n  res.status(e.status).json(e);\n}\n\n  \n}\n\n\nconst checkAuth = async (email, pw) => {\n  let resObj = {\n    auth: false,\n    status: 0,\n    message: \"\"\n  }\n  if(email == \"test@test.com\" && pw == \"123\"){\n    resObj.auth = true;\n    resObj.status = 200;\n    resObj.code = QRCode.toDataURL('I am a pony!')\n    return resObj\n    \n  } else{\n    resObj.message = \"Username or password incorrect\"\n    resObj.status = 401;\n    throw resObj;\n  }\n}"]},"metadata":{},"sourceType":"module"}