{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Pusher from 'pusher-js'; // var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\nexport default function socket() {\n  const {\n    0: people,\n    1: setPeople\n  } = useState({\n    id: null,\n    people: []\n  });\n  const {\n    0: input,\n    1: setInput\n  } = useState({\n    msg: \"\"\n  });\n\n  const endConnection = pusher => {\n    pusher.disconnect();\n    axios.post(`http://localhost:8000/offline/${people.id}`);\n  };\n\n  const sendMsg = e => {\n    e.preventDefault();\n    console.log(\"Sending...\");\n    axios.post(`http://localhost:8000/message/123`, {\n      msg: input.msg\n    });\n  };\n\n  const onInputChange = e => {\n    e.preventDefault();\n    setInput(_objectSpread(_objectSpread({}, input), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n      cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER\n    });\n    console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY); // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n    //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n    //     encrypted: true\n    // });\n\n    let channel = pusher.subscribe('websocket-test');\n    channel.bind('message', function (data) {\n      console.log('Received message: ' + data.msg);\n    });\n    axios.get('http://localhost:8000/people').then(({\n      data\n    }) => {\n      const {\n        people = []\n      } = data;\n      setPeople({\n        people\n      });\n      window.onbeforeunload = endConnection;\n    }, []);\n    return function cleanup(pusher) {\n      endConnection(pusher);\n    };\n  }, []);\n  console.log(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pusher test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), people.people.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: e.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e.isOnline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => sendMsg(e),\n      onChange: e => onInputChange(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"msg\",\n        type: \"text\",\n        value: input.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send MSG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => Router.push('/login'),\n      children: \"Redriect Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/simon.stauffer/Desktop/Code/nextjs-test/pages/socket.js"],"names":["React","useEffect","useState","Router","useRouter","axios","Pusher","socket","people","setPeople","id","input","setInput","msg","endConnection","pusher","disconnect","post","sendMsg","e","preventDefault","console","log","onInputChange","target","name","value","process","env","NEXT_PUBLIC_PUSHER_APP_KEY","cluster","NEXT_PUBLIC_PUSHER_APP_CLUSTER","channel","subscribe","bind","data","get","then","window","onbeforeunload","cleanup","map","isOnline","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Router , {useRouter}  from 'next/router';\nimport axios from 'axios'\nimport Pusher from 'pusher-js'\n\n\n// var pusher = new Pusher('app_key', {\n//     cluster: 'cluster',\n//     encrypted: true\n// })\n// const channel = pusher.subscribe('websocket-test')\n\n\n\nexport default function socket() {\n    const [people, setPeople] = useState({ id: null, people: [] });\n    const [input, setInput] = useState({ msg: \"\" })\n\n    const endConnection = (pusher) => {\n        pusher.disconnect();\n        axios.post(`http://localhost:8000/offline/${people.id}`);\n    }\n\n\n    const sendMsg = (e) => {\n        e.preventDefault()\n        console.log(\"Sending...\")\n        axios.post(`http://localhost:8000/message/123`, { msg: input.msg });\n    }\n\n    const onInputChange = (e) => {\n        e.preventDefault()\n        setInput({ ...input, [e.target.name]: e.target.value })\n    }\n\n    useEffect(() => {\n        let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n            cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n        });\n        console.log(process.env.NEXT_PUBLIC_PUSHER_APP_KEY)\n        // let pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_APP_KEY, {\n        //     cluster: process.env.NEXT_PUBLIC_PUSHER_APP_CLUSTER,\n        //     encrypted: true\n        // });\n\n        let channel = pusher.subscribe('websocket-test');\n\n        channel.bind('message', function (data) {\n\n            console.log('Received message: ' + data.msg);\n\n        });\n\n\n        axios.get('http://localhost:8000/people').then(({ data }) => {\n            const { people = [] } = data;\n            setPeople({ people });\n\n            window.onbeforeunload = endConnection;\n        }, []);\n\n\n        return function cleanup(pusher) {\n            endConnection(pusher);\n        }\n    }, [])\n\n\n    console.log(people)\n    return (\n        <div>\n            <h1>Pusher test</h1>\n            {people.people.map(e => (\n                <div>\n                    <div>{e.name}</div>\n                    <div>{e.isOnline}</div>\n                </div>\n\n            ))}\n\n            \n            <form onSubmit={(e) => sendMsg(e)} onChange={(e) => onInputChange(e)}>\n                <input name=\"msg\" type=\"text\" value={input.msg}></input>\n                <button>Send MSG</button>\n              \n            </form>\n            <button type=\"button\" onClick={() => Router.push('/login')}>Redriect Button</button>\n        </div>\n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}